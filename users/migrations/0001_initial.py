# Generated by Django 5.2.7 on 2025-10-22 17:55

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('status', models.CharField(choices=[('participant', 'Участник'), ('partner', 'Партнер')], default='participant', max_length=20)),
                ('rank', models.IntegerField(choices=[(0, 'Ранг 0'), (1, 'ПУ1'), (2, 'ПУ2'), (3, 'ПУ3'), (4, 'ПУ4'), (5, 'ПУ5'), (6, 'ПУ6'), (7, 'ПУ7'), (8, 'ПУ8'), (9, 'ПУ9'), (10, 'ПУ10')], default=0)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('referral_code', models.CharField(blank=True, max_length=20, unique=True)),
                ('partners_level_1', models.IntegerField(default=0)),
                ('partners_level_2', models.IntegerField(default=0)),
                ('partners_level_3', models.IntegerField(default=0)),
                ('total_purchases', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_rewards', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_payouts', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('remaining_payout', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('inviter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_type', models.CharField(choices=[('green', 'Зеленый бонус (наставнику)'), ('red', 'Красный бонус (участнику)'), ('level_up', 'Бонус за повышение ранга'), ('referral', 'Реферальный бонус')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bonuses_given', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonuses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Бонус',
                'verbose_name_plural': 'Бонусы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PartnerStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=0)),
                ('position', models.IntegerField(default=0)),
                ('children_count', models.IntegerField(default=0)),
                ('total_children', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='structure', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Структура партнера',
                'verbose_name_plural': 'Структуры партнеров',
                'ordering': ['level', 'position'],
            },
        ),
    ]
